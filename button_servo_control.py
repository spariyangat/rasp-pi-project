from gpiozero import Servo, LED, Button
from time import sleep
import math

from gpiozero.pins.pigpio import PiGPIOFactory #features hardware based timing rather than software based
#using the PiGPIO pin factory reduces servo jitter, because it is a more 
#precise hardware-based PWM backend that works better for servos
#it initially jittereed because pulses are generated by software and if software is out by even 1 second, then the motor tweaks out

factory = PiGPIOFactory() #creates new factory according to PiGPIO

#define hardware
servo = Servo(18,min_pulse_width=0.5/1000, max_pulse_width=2.5/1000,pin_factory=factory) #uses this pin factory when creating the servo
#adjust min and max pulse width because my microservo 9g needed a wider range (0.5-2.5 ms) as opposed to (1-2 ms)
#by extending the range a bit, the servo rotates all the way to the minimum and maximum positions

led = LED(4)
button_increase = Button(12, pull_up=False) #adding pull-down resistor via code to match my pulldown resistor wiring
button_decrease = Button(21, pull_up=False) 

#initialize angle
angle = 0.0 #track angle (-1 to 1)  
servo.value = 0.0 #set servo to 90 degrees on startup

#helper function to map angle (0 to 180) to servo.value (-1 to 1)
def angle_to_servo_value(deg):
    return max(-1, min(1, (deg - 90) / 90)) #clamp between -1 and 1

#keep track of angle in degrees
angle_deg = 90 #starting at middle position

try:
    while True:    
        if button_increase.is_pressed:
            led.on()
            if angle_deg < 180:
                angle_deg += 1 #increase angle by 1 , while clamping to 180 degrees
                servo.value = angle_to_servo_value(angle_deg)
                print("Increased to: ", angle_deg, " deg")
            sleep(0.01)  # control speed

        elif button_decrease.is_pressed:
            led.on()
            if angle_deg > 0:
                angle_deg -= 1 #decrease angle by 1 , while clamping to 180 degrees
                servo.value = angle_to_servo_value(angle_deg)
                print("Decreased to: ", angle_deg, " deg")
            sleep(0.01)  # control speed

        else:
            led.off()
            sleep(0.01)
        

except KeyboardInterrupt:
    print("Exiting...")
